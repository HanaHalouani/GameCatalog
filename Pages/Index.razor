@page "/"
@using GameCatalog.Models
@inject NavigationManager NavigationManager

<PageTitle>Game Catalog</PageTitle>

<h1>Game Catalog</h1>

<div class="row-mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary" @onclick="CreateGame">New Game</button>
    </div>
</div>

@if (games is null)
{
    <p><em>Loading . . . </em></p>
}
else
{
    <Delete Game="@currentGame" OnClose="@ConfirmDeletion"></Delete>
    <table class="table table-bordered table-striped table-hover">
        <thead class="table dark">
        <th>Id</th>
        <th>Name</th>
        <th>Genre</th>
        <th>Price</th>
        <th>Release Date</th>
        <th></th>
        </thead>
        <tbody>
        @foreach (var game in games)
        {
            <tr>
                <td>@game.Id</td>
                <td>@game.Name</td>
                <td>@game.Genre</td>
                <td>@game.Price</td>
                <td>@game.ReleaseDate.ToString("MM/dd/yyyy")</td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => UpdateGame(game.Id))"><i class="oi oi-pencil"></i></button>
                    <button class="btn btn-danger" 
                            data-bs-toggle="modal"
                                data-bs-target="#deleteModel"
                            @onclick="(() => currentGame=game)"><i class="oi oi-x"></i></button>

                    </td>
            </tr>
        }

        </tbody>
    </table>
}


@code
{
    private Game[]? games;
    private Game? currentGame;
    protected override void OnInitialized() => games = GameClient.GetGames();
    private void CreateGame() => NavigationManager.NavigateTo("/game");
    private void UpdateGame(int id) => NavigationManager.NavigateTo($"/game/{id}");

    private void ConfirmDeletion(bool accepted)
    {
        if (accepted)
        {
            
            GameClient.DeleteGame(currentGame!.Id);
            games = GameClient.GetGames();

        }

    }

}
